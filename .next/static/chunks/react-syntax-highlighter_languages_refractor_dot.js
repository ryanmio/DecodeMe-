"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_dot"],{

/***/ "./node_modules/refractor/lang/dot.js":
/*!********************************************!*\
  !*** ./node_modules/refractor/lang/dot.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nmodule.exports = dot\ndot.displayName = 'dot'\ndot.aliases = ['gv']\nfunction dot(Prism) {\n  // https://www.graphviz.org/doc/info/lang.html\n  ;(function (Prism) {\n    var ID =\n      '(?:' +\n      [\n        // an identifier\n        /[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source, // a number\n        /-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source, // a double-quoted string\n        /\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source, // HTML-like string\n        /<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/\n          .source\n      ].join('|') +\n      ')'\n    var IDInside = {\n      markup: {\n        pattern: /(^<)[\\s\\S]+(?=>$)/,\n        lookbehind: true,\n        alias: ['language-markup', 'language-html', 'language-xml'],\n        inside: Prism.languages.markup\n      }\n    }\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function withID(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return ID\n        }),\n        flags\n      )\n    }\n    Prism.languages.dot = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\n        greedy: true\n      },\n      'graph-name': {\n        pattern: withID(\n          /(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source,\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name',\n        inside: IDInside\n      },\n      'attr-value': {\n        pattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      'attr-name': {\n        pattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      keyword: /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\n      'compass-point': {\n        pattern: /(:[ \\t\\r\\n]*)(?:[ewc_]|[ns][ew]?)(?![\\w\\x80-\\uFFFF])/,\n        lookbehind: true,\n        alias: 'builtin'\n      },\n      node: {\n        pattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      operator: /[=:]|-[->]/,\n      punctuation: /[\\[\\]{};,]/\n    }\n    Prism.languages.gv = Prism.languages.dot\n  })(Prism)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZG90LmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QixlQUFlLFFBQVE7QUFDdkIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9kb3QuanM/YzEzMSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBkb3RcbmRvdC5kaXNwbGF5TmFtZSA9ICdkb3QnXG5kb3QuYWxpYXNlcyA9IFsnZ3YnXVxuZnVuY3Rpb24gZG90KFByaXNtKSB7XG4gIC8vIGh0dHBzOi8vd3d3LmdyYXBodml6Lm9yZy9kb2MvaW5mby9sYW5nLmh0bWxcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgSUQgPVxuICAgICAgJyg/OicgK1xuICAgICAgW1xuICAgICAgICAvLyBhbiBpZGVudGlmaWVyXG4gICAgICAgIC9bYS16QS1aX1xceDgwLVxcdUZGRkZdW1xcd1xceDgwLVxcdUZGRkZdKi8uc291cmNlLCAvLyBhIG51bWJlclxuICAgICAgICAvLT8oPzpcXC5cXGQrfFxcZCsoPzpcXC5cXGQqKT8pLy5zb3VyY2UsIC8vIGEgZG91YmxlLXF1b3RlZCBzdHJpbmdcbiAgICAgICAgL1wiW15cIlxcXFxdKig/OlxcXFxbXFxzXFxTXVteXCJcXFxcXSopKlwiLy5zb3VyY2UsIC8vIEhUTUwtbGlrZSBzdHJpbmdcbiAgICAgICAgLzwoPzpbXjw+XXwoPyE8IS0tKTwoPzpbXjw+XCInXXxcIlteXCJdKlwifCdbXiddKicpKz58PCEtLSg/OlteLV18LSg/IS0+KSkqLS0+KSo+L1xuICAgICAgICAgIC5zb3VyY2VcbiAgICAgIF0uam9pbignfCcpICtcbiAgICAgICcpJ1xuICAgIHZhciBJREluc2lkZSA9IHtcbiAgICAgIG1hcmt1cDoge1xuICAgICAgICBwYXR0ZXJuOiAvKF48KVtcXHNcXFNdKyg/PT4kKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiBbJ2xhbmd1YWdlLW1hcmt1cCcsICdsYW5ndWFnZS1odG1sJywgJ2xhbmd1YWdlLXhtbCddLFxuICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5tYXJrdXBcbiAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHNvdXJjZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBmbGFnc1xuICAgICAqIEByZXR1cm5zIHtSZWdFeHB9XG4gICAgICovXG4gICAgZnVuY3Rpb24gd2l0aElEKHNvdXJjZSwgZmxhZ3MpIHtcbiAgICAgIHJldHVybiBSZWdFeHAoXG4gICAgICAgIHNvdXJjZS5yZXBsYWNlKC88SUQ+L2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gSURcbiAgICAgICAgfSksXG4gICAgICAgIGZsYWdzXG4gICAgICApXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5kb3QgPSB7XG4gICAgICBjb21tZW50OiB7XG4gICAgICAgIHBhdHRlcm46IC9cXC9cXC8uKnxcXC9cXCpbXFxzXFxTXSo/XFwqXFwvfF4jLiovbSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgJ2dyYXBoLW5hbWUnOiB7XG4gICAgICAgIHBhdHRlcm46IHdpdGhJRChcbiAgICAgICAgICAvKFxcYig/OmRpZ3JhcGh8Z3JhcGh8c3ViZ3JhcGgpWyBcXHRcXHJcXG5dKyk8SUQ+Ly5zb3VyY2UsXG4gICAgICAgICAgJ2knXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJyxcbiAgICAgICAgaW5zaWRlOiBJREluc2lkZVxuICAgICAgfSxcbiAgICAgICdhdHRyLXZhbHVlJzoge1xuICAgICAgICBwYXR0ZXJuOiB3aXRoSUQoLyg9WyBcXHRcXHJcXG5dKik8SUQ+Ly5zb3VyY2UpLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZTogSURJbnNpZGVcbiAgICAgIH0sXG4gICAgICAnYXR0ci1uYW1lJzoge1xuICAgICAgICBwYXR0ZXJuOiB3aXRoSUQoLyhbXFxbOywgXFx0XFxyXFxuXSk8SUQ+KD89WyBcXHRcXHJcXG5dKj0pLy5zb3VyY2UpLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZTogSURJbnNpZGVcbiAgICAgIH0sXG4gICAgICBrZXl3b3JkOiAvXFxiKD86ZGlncmFwaHxlZGdlfGdyYXBofG5vZGV8c3RyaWN0fHN1YmdyYXBoKVxcYi9pLFxuICAgICAgJ2NvbXBhc3MtcG9pbnQnOiB7XG4gICAgICAgIHBhdHRlcm46IC8oOlsgXFx0XFxyXFxuXSopKD86W2V3Y19dfFtuc11bZXddPykoPyFbXFx3XFx4ODAtXFx1RkZGRl0pLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdidWlsdGluJ1xuICAgICAgfSxcbiAgICAgIG5vZGU6IHtcbiAgICAgICAgcGF0dGVybjogd2l0aElEKC8oXnxbXi0uXFx3XFx4ODAtXFx1RkZGRlxcXFxdKTxJRD4vLnNvdXJjZSksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiBJREluc2lkZVxuICAgICAgfSxcbiAgICAgIG9wZXJhdG9yOiAvWz06XXwtWy0+XS8sXG4gICAgICBwdW5jdHVhdGlvbjogL1tcXFtcXF17fTssXS9cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmd2ID0gUHJpc20ubGFuZ3VhZ2VzLmRvdFxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/refractor/lang/dot.js\n"));

/***/ })

}]);