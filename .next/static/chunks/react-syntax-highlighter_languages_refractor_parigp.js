"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_parigp"],{

/***/ "./node_modules/refractor/lang/parigp.js":
/*!***********************************************!*\
  !*** ./node_modules/refractor/lang/parigp.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nmodule.exports = parigp\nparigp.displayName = 'parigp'\nparigp.aliases = []\nfunction parigp(Prism) {\n  Prism.languages.parigp = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n      greedy: true\n    },\n    // PARI/GP does not care about white spaces at all\n    // so let's process the keywords to build an appropriate regexp\n    // (e.g. \"b *r *e *a *k\", etc.)\n    keyword: (function () {\n      var keywords = [\n        'breakpoint',\n        'break',\n        'dbg_down',\n        'dbg_err',\n        'dbg_up',\n        'dbg_x',\n        'forcomposite',\n        'fordiv',\n        'forell',\n        'forpart',\n        'forprime',\n        'forstep',\n        'forsubgroup',\n        'forvec',\n        'for',\n        'iferr',\n        'if',\n        'local',\n        'my',\n        'next',\n        'return',\n        'until',\n        'while'\n      ]\n      keywords = keywords\n        .map(function (keyword) {\n          return keyword.split('').join(' *')\n        })\n        .join('|')\n      return RegExp('\\\\b(?:' + keywords + ')\\\\b')\n    })(),\n    function: /\\b\\w(?:[\\w ]*\\w)?(?= *\\()/,\n    number: {\n      // The lookbehind and the negative lookahead prevent from breaking the .. operator\n      pattern:\n        /((?:\\. *\\. *)?)(?:\\b\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *(?:[+-] *)?\\d(?: *\\d)*)?/i,\n      lookbehind: true\n    },\n    operator:\n      /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n    punctuation: /[\\[\\]{}().,:;|]/\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGFyaWdwLmpzIiwibWFwcGluZ3MiOiJBQUFZOztBQUVaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsMElBQTBJLElBQUk7QUFDOUkseUJBQXlCLE1BQU07QUFDL0I7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGFyaWdwLmpzPzA1MGEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gcGFyaWdwXG5wYXJpZ3AuZGlzcGxheU5hbWUgPSAncGFyaWdwJ1xucGFyaWdwLmFsaWFzZXMgPSBbXVxuZnVuY3Rpb24gcGFyaWdwKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5wYXJpZ3AgPSB7XG4gICAgY29tbWVudDogL1xcL1xcKltcXHNcXFNdKj9cXCpcXC98XFxcXFxcXFwuKi8sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCIoPzpbXlwiXFxcXFxcclxcbl18XFxcXC4pKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgLy8gUEFSSS9HUCBkb2VzIG5vdCBjYXJlIGFib3V0IHdoaXRlIHNwYWNlcyBhdCBhbGxcbiAgICAvLyBzbyBsZXQncyBwcm9jZXNzIHRoZSBrZXl3b3JkcyB0byBidWlsZCBhbiBhcHByb3ByaWF0ZSByZWdleHBcbiAgICAvLyAoZS5nLiBcImIgKnIgKmUgKmEgKmtcIiwgZXRjLilcbiAgICBrZXl3b3JkOiAoZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGtleXdvcmRzID0gW1xuICAgICAgICAnYnJlYWtwb2ludCcsXG4gICAgICAgICdicmVhaycsXG4gICAgICAgICdkYmdfZG93bicsXG4gICAgICAgICdkYmdfZXJyJyxcbiAgICAgICAgJ2RiZ191cCcsXG4gICAgICAgICdkYmdfeCcsXG4gICAgICAgICdmb3Jjb21wb3NpdGUnLFxuICAgICAgICAnZm9yZGl2JyxcbiAgICAgICAgJ2ZvcmVsbCcsXG4gICAgICAgICdmb3JwYXJ0JyxcbiAgICAgICAgJ2ZvcnByaW1lJyxcbiAgICAgICAgJ2ZvcnN0ZXAnLFxuICAgICAgICAnZm9yc3ViZ3JvdXAnLFxuICAgICAgICAnZm9ydmVjJyxcbiAgICAgICAgJ2ZvcicsXG4gICAgICAgICdpZmVycicsXG4gICAgICAgICdpZicsXG4gICAgICAgICdsb2NhbCcsXG4gICAgICAgICdteScsXG4gICAgICAgICduZXh0JyxcbiAgICAgICAgJ3JldHVybicsXG4gICAgICAgICd1bnRpbCcsXG4gICAgICAgICd3aGlsZSdcbiAgICAgIF1cbiAgICAgIGtleXdvcmRzID0ga2V5d29yZHNcbiAgICAgICAgLm1hcChmdW5jdGlvbiAoa2V5d29yZCkge1xuICAgICAgICAgIHJldHVybiBrZXl3b3JkLnNwbGl0KCcnKS5qb2luKCcgKicpXG4gICAgICAgIH0pXG4gICAgICAgIC5qb2luKCd8JylcbiAgICAgIHJldHVybiBSZWdFeHAoJ1xcXFxiKD86JyArIGtleXdvcmRzICsgJylcXFxcYicpXG4gICAgfSkoKSxcbiAgICBmdW5jdGlvbjogL1xcYlxcdyg/OltcXHcgXSpcXHcpPyg/PSAqXFwoKS8sXG4gICAgbnVtYmVyOiB7XG4gICAgICAvLyBUaGUgbG9va2JlaGluZCBhbmQgdGhlIG5lZ2F0aXZlIGxvb2thaGVhZCBwcmV2ZW50IGZyb20gYnJlYWtpbmcgdGhlIC4uIG9wZXJhdG9yXG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKCg/OlxcLiAqXFwuICopPykoPzpcXGJcXGQoPzogKlxcZCkqKD86ICooPyFcXC4gKlxcLilcXC4oPzogKlxcZCkqKT98XFwuICpcXGQoPzogKlxcZCkqKSg/OiAqZSAqKD86WystXSAqKT9cXGQoPzogKlxcZCkqKT8vaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIG9wZXJhdG9yOlxuICAgICAgL1xcLiAqXFwufFsqXFwvIV0oPzogKj0pP3wlKD86ICo9fCg/OiAqIyk/KD86IConKSopP3xcXCsoPzogKlsrPV0pP3wtKD86ICpbLT0+XSk/fDwoPzogKj58KD86ICo8KT8oPzogKj0pPyk/fD4oPzogKj4pPyg/OiAqPSk/fD0oPzogKj0pezAsMn18XFxcXCg/OiAqXFwvKT8oPzogKj0pP3wmKD86IComKT98XFx8ICpcXHx8Wycjfl5dLyxcbiAgICBwdW5jdHVhdGlvbjogL1tcXFtcXF17fSgpLiw6O3xdL1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/refractor/lang/parigp.js\n"));

/***/ })

}]);