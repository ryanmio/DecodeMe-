"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_excelFormula"],{

/***/ "./node_modules/refractor/lang/excel-formula.js":
/*!******************************************************!*\
  !*** ./node_modules/refractor/lang/excel-formula.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nmodule.exports = excelFormula\nexcelFormula.displayName = 'excelFormula'\nexcelFormula.aliases = []\nfunction excelFormula(Prism) {\n  Prism.languages['excel-formula'] = {\n    comment: {\n      pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    reference: {\n      // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n      // Sales!B2\n      // 'Winter sales'!B2\n      // [Sales.xlsx]Jan!B2:B5\n      // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n      // '[Sales.xlsx]Jan sales'!B2:B5\n      // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n      pattern:\n        /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        operator: /!$/,\n        punctuation: /'/,\n        sheet: {\n          pattern: /[^[\\]]+$/,\n          alias: 'function'\n        },\n        file: {\n          pattern: /\\[[^[\\]]+\\]$/,\n          inside: {\n            punctuation: /[[\\]]/\n          }\n        },\n        path: /[\\s\\S]+/\n      }\n    },\n    'function-name': {\n      pattern: /\\b[A-Z]\\w*(?=\\()/i,\n      alias: 'keyword'\n    },\n    range: {\n      pattern:\n        /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n      alias: 'property',\n      inside: {\n        operator: /:/,\n        cell: /\\$?[A-Z]+\\$?\\d+/i,\n        column: /\\$?[A-Z]+/i,\n        row: /\\$?\\d+/\n      }\n    },\n    cell: {\n      // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n      // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n      pattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n      alias: 'property'\n    },\n    number: /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\n    operator: /[-+*/^%=&,]|<[=>]?|>=?/,\n    punctuation: /[[\\]();{}|]/\n  }\n  Prism.languages['xlsx'] = Prism.languages['xls'] =\n    Prism.languages['excel-formula']\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZXhjZWwtZm9ybXVsYS5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxPQUFPLG1CQUFtQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2V4Y2VsLWZvcm11bGEuanM/ZjEyOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxubW9kdWxlLmV4cG9ydHMgPSBleGNlbEZvcm11bGFcbmV4Y2VsRm9ybXVsYS5kaXNwbGF5TmFtZSA9ICdleGNlbEZvcm11bGEnXG5leGNlbEZvcm11bGEuYWxpYXNlcyA9IFtdXG5mdW5jdGlvbiBleGNlbEZvcm11bGEoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzWydleGNlbC1mb3JtdWxhJ10gPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyhcXGJOXFwoXFxzKilcIig/OlteXCJdfFwiXCIpKlwiKD89XFxzKlxcKSkvaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86W15cIl18XCJcIikqXCIoPyFcIikvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICByZWZlcmVuY2U6IHtcbiAgICAgIC8vIGh0dHBzOi8vd3d3LmFibGViaXRzLmNvbS9vZmZpY2UtYWRkaW5zLWJsb2cvMjAxNS8xMi8wOC9leGNlbC1yZWZlcmVuY2UtYW5vdGhlci1zaGVldC13b3JrYm9vay9cbiAgICAgIC8vIFNhbGVzIUIyXG4gICAgICAvLyAnV2ludGVyIHNhbGVzJyFCMlxuICAgICAgLy8gW1NhbGVzLnhsc3hdSmFuIUIyOkI1XG4gICAgICAvLyBEOlxcUmVwb3J0c1xcW1NhbGVzLnhsc3hdSmFuIUIyOkI1XG4gICAgICAvLyAnW1NhbGVzLnhsc3hdSmFuIHNhbGVzJyFCMjpCNVxuICAgICAgLy8gJ0Q6XFxSZXBvcnRzXFxbU2FsZXMueGxzeF1KYW4gc2FsZXMnIUIyOkI1XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKD86J1teJ10qJ3woPzpbXlxccygpW1xcXXt9PD4qP1wiJzssJCZdKlxcW1teXlxccygpW1xcXXt9PD4qP1wiJ10rXFxdKT9cXHcrKSEvLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdzdHJpbmcnLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIG9wZXJhdG9yOiAvISQvLFxuICAgICAgICBwdW5jdHVhdGlvbjogLycvLFxuICAgICAgICBzaGVldDoge1xuICAgICAgICAgIHBhdHRlcm46IC9bXltcXF1dKyQvLFxuICAgICAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgICAgIH0sXG4gICAgICAgIGZpbGU6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXFxbW15bXFxdXStcXF0kLyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvW1tcXF1dL1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgcGF0aDogL1tcXHNcXFNdKy9cbiAgICAgIH1cbiAgICB9LFxuICAgICdmdW5jdGlvbi1uYW1lJzoge1xuICAgICAgcGF0dGVybjogL1xcYltBLVpdXFx3Kig/PVxcKCkvaSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgIHJhbmdlOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFwkP1xcYig/OltBLVpdK1xcJD9cXGQrOlxcJD9bQS1aXStcXCQ/XFxkK3xbQS1aXSs6XFwkP1tBLVpdK3xcXGQrOlxcJD9cXGQrKVxcYi9pLFxuICAgICAgYWxpYXM6ICdwcm9wZXJ0eScsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgb3BlcmF0b3I6IC86LyxcbiAgICAgICAgY2VsbDogL1xcJD9bQS1aXStcXCQ/XFxkKy9pLFxuICAgICAgICBjb2x1bW46IC9cXCQ/W0EtWl0rL2ksXG4gICAgICAgIHJvdzogL1xcJD9cXGQrL1xuICAgICAgfVxuICAgIH0sXG4gICAgY2VsbDoge1xuICAgICAgLy8gRXhjZWwgaXMgY2FzZSBpbnNlbnNpdGl2ZSwgc28gdGhlIHN0cmluZyBcImZvbzFcIiBjb3VsZCBiZSBlaXRoZXIgYSB2YXJpYWJsZSBvciBhIGNlbGwuXG4gICAgICAvLyBUbyBjb21iYXQgdGhpcywgd2UgbWF0Y2ggY2VsbHMgY2FzZSBpbnNlbnNpdGl2ZSwgaWYgdGhlIGNvbnRhaW4gYXQgbGVhc3Qgb25lIFwiJFwiLCBhbmQgY2FzZSBzZW5zaXRpdmUgb3RoZXJ3aXNlLlxuICAgICAgcGF0dGVybjogL1xcYltBLVpdK1xcZCtcXGJ8XFwkW0EtWmEtel0rXFwkP1xcZCtcXGJ8XFxiW0EtWmEtel0rXFwkXFxkK1xcYi8sXG4gICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgIH0sXG4gICAgbnVtYmVyOiAvKD86XFxiXFxkKyg/OlxcLlxcZCspP3xcXEJcXC5cXGQrKSg/OmVbKy1dP1xcZCspP1xcYi9pLFxuICAgIGJvb2xlYW46IC9cXGIoPzpGQUxTRXxUUlVFKVxcYi9pLFxuICAgIG9wZXJhdG9yOiAvWy0rKi9eJT0mLF18PFs9Pl0/fD49Py8sXG4gICAgcHVuY3R1YXRpb246IC9bW1xcXSgpO3t9fF0vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzWyd4bHN4J10gPSBQcmlzbS5sYW5ndWFnZXNbJ3hscyddID1cbiAgICBQcmlzbS5sYW5ndWFnZXNbJ2V4Y2VsLWZvcm11bGEnXVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/refractor/lang/excel-formula.js\n"));

/***/ })

}]);