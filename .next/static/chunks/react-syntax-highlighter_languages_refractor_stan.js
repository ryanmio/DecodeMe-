"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["react-syntax-highlighter_languages_refractor_stan"],{

/***/ "./node_modules/refractor/lang/stan.js":
/*!*********************************************!*\
  !*** ./node_modules/refractor/lang/stan.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n\nmodule.exports = stan\nstan.displayName = 'stan'\nstan.aliases = []\nfunction stan(Prism) {\n  ;(function (Prism) {\n    // https://mc-stan.org/docs/2_28/reference-manual/bnf-grammars.html\n    var higherOrderFunctions =\n      /\\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\\b/\n    Prism.languages.stan = {\n      comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|#(?!include).*/,\n      string: {\n        // String literals can contain spaces and any printable ASCII characters except for \" and \\\n        // https://mc-stan.org/docs/2_24/reference-manual/print-statements-section.html#string-literals\n        pattern: /\"[\\x20\\x21\\x23-\\x5B\\x5D-\\x7E]*\"/,\n        greedy: true\n      },\n      directive: {\n        pattern: /^([ \\t]*)#include\\b.*/m,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'function-arg': {\n        pattern: RegExp(\n          '(' +\n            higherOrderFunctions.source +\n            /\\s*\\(\\s*/.source +\n            ')' +\n            /[a-zA-Z]\\w*/.source\n        ),\n        lookbehind: true,\n        alias: 'function'\n      },\n      constraint: {\n        pattern: /(\\b(?:int|matrix|real|row_vector|vector)\\s*)<[^<>]*>/,\n        lookbehind: true,\n        inside: {\n          expression: {\n            pattern: /(=\\s*)\\S(?:\\S|\\s+(?!\\s))*?(?=\\s*(?:>$|,\\s*\\w+\\s*=))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          property: /\\b[a-z]\\w*(?=\\s*=)/i,\n          operator: /=/,\n          punctuation: /^<|>$|,/\n        }\n      },\n      keyword: [\n        {\n          pattern:\n            /\\bdata(?=\\s*\\{)|\\b(?:functions|generated|model|parameters|quantities|transformed)\\b/,\n          alias: 'program-block'\n        },\n        /\\b(?:array|break|cholesky_factor_corr|cholesky_factor_cov|complex|continue|corr_matrix|cov_matrix|data|else|for|if|in|increment_log_prob|int|matrix|ordered|positive_ordered|print|real|reject|return|row_vector|simplex|target|unit_vector|vector|void|while)\\b/, // these are functions that are known to take another function as their first argument.\n        higherOrderFunctions\n      ],\n      function: /\\b[a-z]\\w*(?=\\s*\\()/i,\n      number:\n        /(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:E[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n      boolean: /\\b(?:false|true)\\b/,\n      operator: /<-|\\.[*/]=?|\\|\\|?|&&|[!=<>+\\-*/]=?|['^%~?:]/,\n      punctuation: /[()\\[\\]{},;]/\n    }\n    Prism.languages.stan.constraint.inside.expression.inside =\n      Prism.languages.stan\n  })(Prism)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc3Rhbi5qcyIsIm1hcHBpbmdzIjoiQUFBWTs7QUFFWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLEVBQUU7QUFDL0I7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zdGFuLmpzP2ZhM2UiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbm1vZHVsZS5leHBvcnRzID0gc3Rhblxuc3Rhbi5kaXNwbGF5TmFtZSA9ICdzdGFuJ1xuc3Rhbi5hbGlhc2VzID0gW11cbmZ1bmN0aW9uIHN0YW4oUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICAvLyBodHRwczovL21jLXN0YW4ub3JnL2RvY3MvMl8yOC9yZWZlcmVuY2UtbWFudWFsL2JuZi1ncmFtbWFycy5odG1sXG4gICAgdmFyIGhpZ2hlck9yZGVyRnVuY3Rpb25zID1cbiAgICAgIC9cXGIoPzphbGdlYnJhX3NvbHZlcnxhbGdlYnJhX3NvbHZlcl9uZXd0b258aW50ZWdyYXRlXzFkfGludGVncmF0ZV9vZGV8aW50ZWdyYXRlX29kZV9iZGZ8aW50ZWdyYXRlX29kZV9yazQ1fG1hcF9yZWN0fG9kZV8oPzphZGFtc3xiZGZ8Y2tya3xyazQ1KSg/Ol90b2wpP3xvZGVfYWRqb2ludF90b2xfY3RsfHJlZHVjZV9zdW18cmVkdWNlX3N1bV9zdGF0aWMpXFxiL1xuICAgIFByaXNtLmxhbmd1YWdlcy5zdGFuID0ge1xuICAgICAgY29tbWVudDogL1xcL1xcLy4qfFxcL1xcKltcXHNcXFNdKj9cXCpcXC98Iyg/IWluY2x1ZGUpLiovLFxuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIC8vIFN0cmluZyBsaXRlcmFscyBjYW4gY29udGFpbiBzcGFjZXMgYW5kIGFueSBwcmludGFibGUgQVNDSUkgY2hhcmFjdGVycyBleGNlcHQgZm9yIFwiIGFuZCBcXFxuICAgICAgICAvLyBodHRwczovL21jLXN0YW4ub3JnL2RvY3MvMl8yNC9yZWZlcmVuY2UtbWFudWFsL3ByaW50LXN0YXRlbWVudHMtc2VjdGlvbi5odG1sI3N0cmluZy1saXRlcmFsc1xuICAgICAgICBwYXR0ZXJuOiAvXCJbXFx4MjBcXHgyMVxceDIzLVxceDVCXFx4NUQtXFx4N0VdKlwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgZGlyZWN0aXZlOiB7XG4gICAgICAgIHBhdHRlcm46IC9eKFsgXFx0XSopI2luY2x1ZGVcXGIuKi9tLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgICAgfSxcbiAgICAgICdmdW5jdGlvbi1hcmcnOiB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAnKCcgK1xuICAgICAgICAgICAgaGlnaGVyT3JkZXJGdW5jdGlvbnMuc291cmNlICtcbiAgICAgICAgICAgIC9cXHMqXFwoXFxzKi8uc291cmNlICtcbiAgICAgICAgICAgICcpJyArXG4gICAgICAgICAgICAvW2EtekEtWl1cXHcqLy5zb3VyY2VcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICAgIH0sXG4gICAgICBjb25zdHJhaW50OiB7XG4gICAgICAgIHBhdHRlcm46IC8oXFxiKD86aW50fG1hdHJpeHxyZWFsfHJvd192ZWN0b3J8dmVjdG9yKVxccyopPFtePD5dKj4vLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBleHByZXNzaW9uOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKD1cXHMqKVxcUyg/OlxcU3xcXHMrKD8hXFxzKSkqPyg/PVxccyooPzo+JHwsXFxzKlxcdytcXHMqPSkpLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBpbnNpZGU6IG51bGwgLy8gc2VlIGJlbG93XG4gICAgICAgICAgfSxcbiAgICAgICAgICBwcm9wZXJ0eTogL1xcYlthLXpdXFx3Kig/PVxccyo9KS9pLFxuICAgICAgICAgIG9wZXJhdG9yOiAvPS8sXG4gICAgICAgICAgcHVuY3R1YXRpb246IC9ePHw+JHwsL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAga2V5d29yZDogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC9cXGJkYXRhKD89XFxzKlxceyl8XFxiKD86ZnVuY3Rpb25zfGdlbmVyYXRlZHxtb2RlbHxwYXJhbWV0ZXJzfHF1YW50aXRpZXN8dHJhbnNmb3JtZWQpXFxiLyxcbiAgICAgICAgICBhbGlhczogJ3Byb2dyYW0tYmxvY2snXG4gICAgICAgIH0sXG4gICAgICAgIC9cXGIoPzphcnJheXxicmVha3xjaG9sZXNreV9mYWN0b3JfY29ycnxjaG9sZXNreV9mYWN0b3JfY292fGNvbXBsZXh8Y29udGludWV8Y29ycl9tYXRyaXh8Y292X21hdHJpeHxkYXRhfGVsc2V8Zm9yfGlmfGlufGluY3JlbWVudF9sb2dfcHJvYnxpbnR8bWF0cml4fG9yZGVyZWR8cG9zaXRpdmVfb3JkZXJlZHxwcmludHxyZWFsfHJlamVjdHxyZXR1cm58cm93X3ZlY3RvcnxzaW1wbGV4fHRhcmdldHx1bml0X3ZlY3Rvcnx2ZWN0b3J8dm9pZHx3aGlsZSlcXGIvLCAvLyB0aGVzZSBhcmUgZnVuY3Rpb25zIHRoYXQgYXJlIGtub3duIHRvIHRha2UgYW5vdGhlciBmdW5jdGlvbiBhcyB0aGVpciBmaXJzdCBhcmd1bWVudC5cbiAgICAgICAgaGlnaGVyT3JkZXJGdW5jdGlvbnNcbiAgICAgIF0sXG4gICAgICBmdW5jdGlvbjogL1xcYlthLXpdXFx3Kig/PVxccypcXCgpL2ksXG4gICAgICBudW1iZXI6XG4gICAgICAgIC8oPzpcXGJcXGQrKD86X1xcZCspKig/OlxcLig/OlxcZCsoPzpfXFxkKykqKT8pP3xcXEJcXC5cXGQrKD86X1xcZCspKikoPzpFWystXT9cXGQrKD86X1xcZCspKik/aT8oPyFcXHcpL2ksXG4gICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgICAgb3BlcmF0b3I6IC88LXxcXC5bKi9dPT98XFx8XFx8P3wmJnxbIT08PitcXC0qL109P3xbJ14lfj86XS8sXG4gICAgICBwdW5jdHVhdGlvbjogL1soKVxcW1xcXXt9LDtdL1xuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXMuc3Rhbi5jb25zdHJhaW50Lmluc2lkZS5leHByZXNzaW9uLmluc2lkZSA9XG4gICAgICBQcmlzbS5sYW5ndWFnZXMuc3RhblxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/refractor/lang/stan.js\n"));

/***/ })

}]);